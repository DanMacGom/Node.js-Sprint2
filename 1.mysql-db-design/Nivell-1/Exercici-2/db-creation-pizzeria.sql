-- MySQL Script generated by MySQL Workbench
-- jue 11 feb 2021 10:48:56
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema pizzeria
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema pizzeria
-- -----------------------------------------------------
drop database pizzeria;
CREATE SCHEMA IF NOT EXISTS `pizzeria` ;
USE `pizzeria` ;

-- -----------------------------------------------------
-- Table `pizzeria`.`province`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`province` (
  `province_pk` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`province_pk`),
  INDEX `idx_prov_name` (`name` ASC) VISIBLE,
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB
COMMENT = 'Indexes:\nIndexed by name since users will often search by province name.\nNulls:\nName is Not Null, a row in province will always have a name.\nUnique:\nName of the provinces must be unique.';


-- -----------------------------------------------------
-- Table `pizzeria`.`locality`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`locality` (
  `locality_pk` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `province_id` INT UNSIGNED NOT NULL,
  `name` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`locality_pk`),
  INDEX `fk_locality_province1_idx` (`province_id` ASC) VISIBLE,
  INDEX `idx_loc_name` (`name` ASC) VISIBLE,
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  CONSTRAINT `fk_locality_province1`
    FOREIGN KEY (`province_id`)
    REFERENCES `pizzeria`.`province` (`province_pk`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Indexes:\nIndexed by name since users will often filter the table by locality name.\nNulls:\nName is Not Null. A row in this table without a name does not make sense.\nUnique:\nNames of the localities must be unique.';


-- -----------------------------------------------------
-- Table `pizzeria`.`customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`customer` (
  `customer_pk` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `province_id` INT UNSIGNED NOT NULL,
  `locality_id` INT UNSIGNED NOT NULL,
  `name` VARCHAR(20) NULL,
  `surname1` VARCHAR(20) NULL,
  `surname2` VARCHAR(20) NULL,
  `street_type` VARCHAR(10) NULL,
  `street_name` VARCHAR(20) NULL,
  `street_number` VARCHAR(4) NULL,
  `floor` VARCHAR(3) NULL,
  `door` VARCHAR(3) NULL,
  `postal_code` VARCHAR(5) NULL,
  PRIMARY KEY (`customer_pk`),
  INDEX `fk_customer_province_idx` (`province_id` ASC) VISIBLE,
  INDEX `fk_client_locality1_idx` (`locality_id` ASC) VISIBLE,
  INDEX `idx_cust_n_s1_s2` (`name` ASC, `surname1` ASC, `surname2` ASC) VISIBLE,
  CONSTRAINT `fk_customer_province`
    FOREIGN KEY (`province_id`)
    REFERENCES `pizzeria`.`province` (`province_pk`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_customer_locality1`
    FOREIGN KEY (`locality_id`)
    REFERENCES `pizzeria`.`locality` (`locality_pk`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Indexes:\nIndexed by a complex index name, surname1 and surname2, since searching by only one of those may find too many people.\nNulls:\nLocality and province are not null because they are always known: it is either delivery, or the food is given at the shop.\nThe customer may not give the other data so the columns are nullable.';


-- -----------------------------------------------------
-- Table `pizzeria`.`shop`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`shop` (
  `shop_pk` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `province_id` INT UNSIGNED NOT NULL,
  `locality_id` INT UNSIGNED NOT NULL,
  `street_type` VARCHAR(20) NOT NULL,
  `street_name` VARCHAR(20) NOT NULL,
  `street_number` VARCHAR(4) NOT NULL,
  `postal_code` VARCHAR(5) NOT NULL,
  PRIMARY KEY (`shop_pk`),
  INDEX `fk_shop_locality1_idx` (`locality_id` ASC) VISIBLE,
  INDEX `fk_shop_province1_idx` (`province_id` ASC) VISIBLE,
  INDEX `idx_strt_n_loc` (`street_name` ASC, `locality_id` ASC) VISIBLE,
  UNIQUE INDEX `idx_uq_locid_stna_stnu` (`locality_id` ASC, `street_name` ASC, `street_number` ASC) VISIBLE,
  CONSTRAINT `fk_shop_locality1`
    FOREIGN KEY (`locality_id`)
    REFERENCES `pizzeria`.`locality` (`locality_pk`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_shop_province1`
    FOREIGN KEY (`province_id`)
    REFERENCES `pizzeria`.`province` (`province_pk`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Indexes:\nComplex index of street_name and locality.\nUnique index of locality_id, street_name, and street_number since two shops cannot have these repeated.\nNulls:\nNo columns are nullable. They are all known values.\n';


-- -----------------------------------------------------
-- Table `pizzeria`.`employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`employee` (
  `employee_pk` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `shop_id` INT UNSIGNED NOT NULL,
  `name` VARCHAR(20) NOT NULL,
  `surname1` VARCHAR(20) NOT NULL,
  `surname2` VARCHAR(20) NOT NULL,
  `NIF` VARCHAR(9) NOT NULL,
  `phone_number` VARCHAR(9) NOT NULL,
  `occupation` ENUM("C", "D") NOT NULL,
  PRIMARY KEY (`employee_pk`, `shop_id`),
  INDEX `idx_n_s1` (`name` ASC, `surname1` ASC) VISIBLE,
  INDEX `fk_employee_shop1_idx` (`shop_id` ASC) VISIBLE,
  UNIQUE INDEX `NIF_UNIQUE` (`NIF` ASC) VISIBLE,
  UNIQUE INDEX `phone_number_UNIQUE` (`phone_number` ASC) VISIBLE,
  CONSTRAINT `fk_employee_shop1`
    FOREIGN KEY (`shop_id`)
    REFERENCES `pizzeria`.`shop` (`shop_pk`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Description:\noccupation is an enumeration with key-pairs -> \"C\": cook, \"D\": delivery person.\nIndexes:\nComplex index by name and surname1 since a shop is small enough that this combination does not repeat often.\nNulls:\nNo columns are nullable. They are all known values.\nUnique:\nPhone number and NIF must be unique.';


-- -----------------------------------------------------
-- Table `pizzeria`.`order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`order` (
  `order_pk` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `customer_id` INT UNSIGNED NOT NULL,
  `shop_id` INT UNSIGNED NOT NULL,
  `delivery_employee_id` INT UNSIGNED NULL,
  `dt_order_placed` DATETIME NOT NULL,
  `is_delivery` BIT NOT NULL,
  `dt_delivery` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`order_pk`, `customer_id`, `shop_id`),
  INDEX `fk_order_customer1_idx` (`customer_id` ASC) VISIBLE,
  INDEX `fk_order_1_idx` (`delivery_employee_id` ASC) VISIBLE,
  INDEX `fk_order_shop1_idx` (`shop_id` ASC) VISIBLE,
  INDEX `idx_dt_ord_plc` (`dt_order_placed` ASC) VISIBLE,
  CONSTRAINT `fk_order_customer1`
    FOREIGN KEY (`customer_id`)
    REFERENCES `pizzeria`.`customer` (`customer_pk`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_order_1`
    FOREIGN KEY (`delivery_employee_id`)
    REFERENCES `pizzeria`.`employee` (`employee_pk`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_order_shop1`
    FOREIGN KEY (`shop_id`)
    REFERENCES `pizzeria`.`shop` (`shop_pk`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = big5
COMMENT = 'Description:\nThis table describes attributes of the orders.\nIf is_delivery is 1 then an employee is assigned to that order.\nWhen the employee has delivered the goods, he or she sends a message to the backend and the datetime is updated.\nIndexes:\nIndexed by dt_order_placed.\nNulls:\nThe only nullable columns are delivery_employee_id since not all orders are delivery. \nAlso, dt_delivery since it is unknown until the employee delivers the food.';


-- -----------------------------------------------------
-- Table `pizzeria`.`pizza_category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`pizza_category` (
  `pizza_category_pk` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`pizza_category_pk`),
  INDEX `idx_n` (`name` ASC) VISIBLE,
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB
COMMENT = 'Description:\nName of the category can be updated multiple times a year.\nIndexes:\nIndexed by category name.\nUnique:\nName must be unique.';


-- -----------------------------------------------------
-- Table `pizzeria`.`product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`product` (
  `product_pk` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `category_id` INT UNSIGNED NULL,
  `type` ENUM("P", "H", "D") NOT NULL,
  `name` VARCHAR(20) NOT NULL,
  `description` VARCHAR(100) NOT NULL,
  `image` VARCHAR(3000) NOT NULL,
  `price` DECIMAL(5,2) NOT NULL,
  PRIMARY KEY (`product_pk`),
  INDEX `fk_product_pizza_category1_idx` (`category_id` ASC) VISIBLE,
  INDEX `idx_n` (`name` ASC) VISIBLE,
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  CONSTRAINT `fk_product_pizza_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `pizzeria`.`pizza_category` (`pizza_category_pk`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Description:\nColumn type is an enumeration with key-pairs -> \"P\": pizza, \"H\": hamburger and \"D\": drink. \ncategory_id only applies to pizzas.\nPrice in euros.\nIndexes:\nIndexed by product name.\nNulls:\ncategory_id may be NULL because only pizzas have a category.\nUnique:\nName must be unique.';


-- -----------------------------------------------------
-- Table `pizzeria`.`order_line`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`order_line` (
  `order_line_pk` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `order_id` INT UNSIGNED NOT NULL,
  `product_id` INT UNSIGNED NOT NULL,
  `quantity` TINYINT UNSIGNED NOT NULL,
  `total_price` DECIMAL(4,2) NOT NULL,
  PRIMARY KEY (`order_line_pk`, `order_id`, `product_id`),
  INDEX `fk_order_line_product1_idx` (`product_id` ASC) VISIBLE,
  INDEX `fk_order_line_order1_idx` (`order_id` ASC) VISIBLE,
  INDEX `idx_tot_prc` (`total_price` ASC) VISIBLE,
  CONSTRAINT `fk_order_line_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `pizzeria`.`product` (`product_pk`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_order_line_order1`
    FOREIGN KEY (`order_id`)
    REFERENCES `pizzeria`.`order` (`order_pk`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Description:\nThis table has a row for each product in an order.\nIt is an aggregate of how many items and how much they cost.\nIndexes:\nIndexed by total_price.\nNulls:\nNo columns are nullable.';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
